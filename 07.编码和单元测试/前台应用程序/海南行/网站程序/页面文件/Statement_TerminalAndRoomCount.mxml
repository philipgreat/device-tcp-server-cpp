<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" initialize="init()" width="790" height="550" fontSize="15"  backgroundColor="#E8EFE8" borderColor="#00646E" color="#FFFFFF" fontFamily="Arial" borderThicknessBottom="25" backgroundAlpha="0.8" title="酒店房间数、终端数" xmlns:ns1="*">
	
	<mx:RemoteObject id="statementOfTerminalAndRoomCount_service" destination="StatementOfTerminalandRoomCountService"  
		result="doTerminalTypeResult(event.result)" showBusyCursor="true"   
		fault="doFault(event)">
	</mx:RemoteObject>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.collections.ArrayCollection;
			import cn.ucans.flex.FlexRequest;
 			import cn.ucans.flex.FlexReponse;
 			
 			import mx.events.CloseEvent;
 			import mx.controls.Alert;
 			private var strFileName:String="";
 			private var file: FileReference;
 			
 			
 			private var dialog_confirm:CCSSConfirm = null;
 			
 			
			[Bindable]
			public var tableGridList:ArrayCollection=new ArrayCollection();
			
			private function init():void{
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 9090;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id=this.parentApplication.LoginORG_ID;
				request.user_id=this.parentApplication.LoginUser_ID;
				
				this.statementOfTerminalAndRoomCount_service.doTransaction(request);
				this.enabled = false;
			}
			
			private function doQuery():void{
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 9091;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id=this.parentApplication.LoginORG_ID;
				request.user_id=this.parentApplication.LoginUser_ID;
				
				request.form.orgId=hotel_Id.selectedItem.data;
				
				this.statementOfTerminalAndRoomCount_service.doTransaction(request);
				this.enabled = false;
			}
			
			
	
			
			private function doExport():void{
				if(this.tableGridList != null && this.tableGridList.length > 0){
					
	    			var strFileData:String = "酒店ID||酒店名称||代销商名称||房间数||已发放终端数";				
					for(var n:int = 0;n < this.tableGridList.length;n ++){
						var item:Object = this.tableGridList.getItemAt(n);
						strFileData = strFileData + "&&" + 
						NVL(item.ORG_ID,"") + "||" + 
						NVL(item.ORG_HOTEL_NAME,"") + "||" + 
						NVL(item.ORG_TERMINAL_NAME,"") + "||" + 
						NVL(item.ROOM_COUNT,"") + "||" +  
						NVL(item.TERMINAL_COUNT,"");
					}
					
					var request:FlexRequest = new FlexRequest();
					request.menu_id = this.parentApplication.LoginMenu_ID;
	    			request.ope_id = 9095;
	    			request.org_id = this.parentApplication.LoginORG_ID;
	    			request.user_id = this.parentApplication.LoginUser_ID;
					this.statementOfTerminalAndRoomCount_service.CreateExcelFile(strFileData,"",request);
					this.enabled = false;
				}else{
				 	
					CCSSAlert.showMessageDialog(this,"请先查询出数据，再进行本操作！");
				 	return;
				 }
    		}
    		
    		 private function NVL(strSour:String,strTag:String):String{
				if(strSour == null){
					return strTag;
				}else{
					return strSour;
				}
				return null;
			}
			
			private function fun_DeleteExcel(event:CloseEvent):void{	
					
				switch(event.detail){
				
					case Alert.YES:
						var downloadURL:URLRequest;
							downloadURL = new URLRequest(parentApplication.strPubURL + "//TempFile//"+
								strFileName);
							file = new FileReference();
							file.addEventListener(ProgressEvent.PROGRESS,onProgress);
							file.addEventListener(Event.COMPLETE, downComplete);
							file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
							file.addEventListener(Event.CANCEL,doCancel);
							file.download(downloadURL);
						break;
					case Alert.NO:
							var request:FlexRequest = new FlexRequest();
							request.menu_id = this.parentApplication.LoginMenu_ID;
			    			request.ope_id = 9096;
			    			request.org_id = this.parentApplication.LoginORG_ID;
			    			request.user_id = this.parentApplication.LoginUser_ID;
							statementOfTerminalAndRoomCount_service.DeleteExcelFile(strFileName,request);
							this.enabled = false;
						break;
				}
			}
			
			 private function onProgress(e: ProgressEvent): void
			{
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				
				if(oProcessBar == null)
				{
					oProcessBar = new ProcessBarCanvas();
					oProcessBar.x = 300;
					oProcessBar.y = 200;
					oProcessBar.name = "ProcessBarCanvas";
					this.addChild(oProcessBar);
					oProcessBar.onProgress(e);
				}
				else
				{
					oProcessBar.onProgress(e);
				}
				
			}

			private function downComplete(e:Event): void{
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				if(oProcessBar != null)
				{
					this.removeChild(oProcessBar);
				}
				CCSSAlert.showMessageDialog(this,"生成Excel文件成功");
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9096;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				this.statementOfTerminalAndRoomCount_service.DeleteExcelFile(strFileName,request);
				this.enabled = false;
			}
			
			private function doCancel(event:Event):void
			{
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9096;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				statementOfTerminalAndRoomCount_service.DeleteExcelFile(strFileName,request);
				this.enabled = false;
			}
			
			private function ioErrorHandler(e:Event): void{
				CCSSAlert.showErrorDialog(this,"ioErrorHandler: " + e);
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				if(oProcessBar != null)
				{
					this.removeChild(oProcessBar);
				}
				
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9096;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				statementOfTerminalAndRoomCount_service.DeleteExcelFile(strFileName,request);
				CCSSAlert.showErrorDialog(this,"文件下载错误，请联系管理员！");
				this.enabled = false;
			}
						
			
			private function doTerminalTypeResult(data:Object):void{
				this.enabled = true;
				var reponse:FlexReponse = data as FlexReponse;
				switch(reponse.ope_id){
					case 9090:
						if(reponse.sign == 0){
							
							var orgtype:String=reponse.result.orgType as String;
							
							if(orgtype=="0"){
								this.agentId.visible=true;
								this.hotel_Id.dataProvider=reponse.result.listForOrgName as ArrayCollection;
							}
							
							if(orgtype=="3"){
								this.agentId.visible=false;
								this.hotel_Id.enabled=false;
								this.query_Id.enabled=false;
								this.export_Id.enabled=false;
							
							}
							var query_init_list:ArrayCollection = reponse.result.list as ArrayCollection;
							tableGridList = query_init_list;
							return;
						}
						break;
					case 9091:
						if(reponse.sign == 0){
							var query_list:ArrayCollection = reponse.result.list as ArrayCollection;
							tableGridList = query_list;
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 9023:
						if(reponse.sign == 0){
							this.init();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 9024:
						if(reponse.sign == 0){
							this.init();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 9095:
						if(reponse.sign == 0)
						{
							strFileName = (reponse.org_id as String);	
							dialog_confirm = new CCSSConfirm();	
							Alert.show("请问您真的想导出这些数据吗？","确认信息",3,this,fun_DeleteExcel);
							return;
						}
						else
						{
							CCSSAlert.showErrorDialog(this,"生成Execl文件时出错，错误代码是：" + reponse.message);
							return;
						}
						break;
					case 9096:
						if(reponse.sign == 0)
						{
							return;
						}
						else
						{
							CCSSAlert.showErrorDialog(this,"删除Execl文件时出错，错误代码是：" + reponse.message);
							return;
						}
						break;
					default:
						break;				
				}
			}
			
			
			private function doFault(event:Event):void{
				CCSSAlert.showErrorDialog(this,event.toString());
				return;
			}
			
		]]>
	</mx:Script>
	
	<mx:Panel x="508" y="0" width="262" height="97" layout="absolute" borderColor="#050BFA" title="控制区域" fontSize="13">
		<mx:Button x="95.5" y="15" label="导出" id="export_Id" fontFamily="Arial" fontSize="12" color="#040404" click="doExport()"/>
	</mx:Panel>
	
	<mx:Panel x="0" y="0" width="500" height="97" layout="absolute" title="查询向导" borderColor="#2FE49A">
		<mx:Button x="367.5" y="15" label="查询"  id="query_Id" fontFamily="Arial" fontSize="12" color="#040404" click="doQuery()"/>
		<mx:ComboBox x="129" y="15" color="#040404" id="hotel_Id" dropdownWidth="300" fontSize="12" fontFamily="Arial"></mx:ComboBox>
		<mx:Label x="62" y="17" text="酒店名称" color="#040404" fontSize="12" fontFamily="Arial"/>
	</mx:Panel>
	
	
	<mx:Panel x="0" y="105" width="770" height="384" layout="absolute" borderColor="#3D50C2" fontSize="13" title="数据">
		<mx:DataGrid x="0" y="0" width="750" height="340" id="TableGrid"  variableRowHeight="true" borderColor="#050505"  dataProvider="{tableGridList}" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" textAlign="center" fontSize="12" color="#030303">
			<mx:columns>
				<mx:DataGridColumn headerText="酒店ID" dataField="ORG_ID" width="130"/>
				<mx:DataGridColumn headerText="酒店名称" dataField="ORG_HOTEL_NAME" width="200"/>
				<mx:DataGridColumn id="agentId" headerText="代销商名称" dataField="ORG_AGENT_NAME" width="200" visible="false"/>
				<mx:DataGridColumn headerText="房间数" dataField="ROOM_COUNT" width="100"/>
				<mx:DataGridColumn headerText="已发放终端数" dataField="TERMINAL_COUNT" width="100"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:Panel>
	
	
	
</mx:Panel>
