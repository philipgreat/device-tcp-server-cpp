<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" initialize="init()" creationComplete="setComplete()" layout="absolute" width="790" height="550" fontSize="15" fontFamily="Arial" color="#F3F5F6" borderColor="#00656E" title="登陆情况查询（其他角色）" xmlns:ns1="*">
	<mx:Panel x="0" y="102" width="770" height="402" layout="absolute" borderColor="#101139" title="数据">
		<mx:DataGrid x="0" y="0" width="750" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" textAlign="center"  height="356" id="TableGrid" borderColor="#040404" color="#020202" fontSize="12">
			<mx:columns>
				<mx:DataGridColumn headerText="操作员ID" dataField="USER_ID" width="100"/>
				<mx:DataGridColumn headerText="操作员名字" dataField="USER_NAME" width="130"/>				
				<mx:DataGridColumn headerText="所属组织" dataField="ORG_NAME" width="140"/>
				<mx:DataGridColumn headerText="角色名称" dataField="ROLE_NAME" width="120"/>
				<mx:DataGridColumn headerText="登录时间" dataField="LOGIN_TIME" width="140"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:Panel>
	<mx:Panel x="0" y="0" width="770" height="94" layout="absolute" borderColor="#221F8D" title="查询向导">
		<mx:Button x="688" y="10" label="查询" click="doQueryLoginHis()" fontFamily="Arial" fontSize="12" color="#030303" fillAlphas="[1.0, 1.0]" fillColors="[#F1A4A4, #F5E4E4]"/>
		<ns1:TimeField x="67" y="13" fontFamily="Arial" fontSize="12" color="#020202" id="notbefore">
		</ns1:TimeField>
		<mx:Label x="10" y="14" text="开始时间" fontSize="12" color="#050505"/>
		<mx:Label x="294" y="14" text="截止时间" fontSize="12" color="#050505"/>
		<ns1:TimeField x="355" y="13" fontFamily="Arial" fontSize="12" color="#020202" id="notafter">
		</ns1:TimeField>
	</mx:Panel>
	<mx:RemoteObject id="role_service" destination="UserInfoRoleFlexService"  
		result="doRoleResult(event.result)" showBusyCursor="true"   
		fault="doFault(event)">
	</mx:RemoteObject>
	<mx:Script>
		<![CDATA[
	 		import cn.ucans.bean.T_ROLE_INFO;
	 		
	 		import cn.ucans.bean.T_ORG_INFO;
	 		import cn.ucans.bean.T_USER_INFO;
	 		import cn.ucans.tree.TreeNode;
	 		import mx.collections.ArrayCollection;
	 		import cn.ucans.flex.FlexRequest;
	 		import cn.ucans.flex.FlexReponse;
	 		import cn.ucans.common.RegularExpression;
	 		import cn.ucans.common.DataProvider;
	 		import cn.ucans.common.ArrayFactory;
	 		
	 		private var regular:RegularExpression = new RegularExpression();
			
			private function init():void{
				this.notbefore.setTime("00:00:00");
				this.notafter.setTime("23:59:59");
			}
			
			private function setComplete():void{
				var org:T_ORG_INFO = new T_ORG_INFO();				
				var user:T_USER_INFO = new T_USER_INFO();
				user.USER_ID = this.parentApplication.LoginUser_ID;
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 1026;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id = this.parentApplication.LoginORG_ID;
				request.user_id = this.parentApplication.LoginUser_ID;
				request.form.org = org;
				request.form.user = user;
				request.form.notbefore = this.notbefore.getTime();
				request.form.notafter = this.notafter.getTime();
				this.role_service.doTransaction(request);
				this.enabled = false;
			}
			
			private function doQueryLoginHis():void{
				var org:T_ORG_INFO = new T_ORG_INFO();				
				var user:T_USER_INFO = new T_USER_INFO();
				user.USER_ID = this.parentApplication.LoginUser_ID;
				
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 1026;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id = this.parentApplication.LoginORG_ID;
				request.user_id = this.parentApplication.LoginUser_ID;
				request.form.org = org;
				request.form.user = user;
				request.form.notbefore = this.notbefore.getTime();
				request.form.notafter = this.notafter.getTime();
				this.role_service.doTransaction(request);
				this.enabled = false;
			}
			
			private function doRoleResult(data:Object):void{
				this.enabled = true;
				var reponse:FlexReponse = data as FlexReponse;
				switch(reponse.ope_id){
					case 1026:
						if(reponse.sign == 0){
							var collection:ArrayCollection = reponse.result.list as ArrayCollection;
							this.TableGrid.dataProvider = collection;
							if(collection.length==0){
								CCSSAlert.showMessageDialog(this,"没有找到任何数据！");
								return;
							}
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 1027:
						if(reponse.sign == 0){
							
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					default:
						break;				
				}
			}
			
			private function doFault(event:Event):void{
				CCSSAlert.showErrorDialog(this,event.toString());
				return;
			}
	 	]]>
	 </mx:Script>
		
</mx:Panel>
