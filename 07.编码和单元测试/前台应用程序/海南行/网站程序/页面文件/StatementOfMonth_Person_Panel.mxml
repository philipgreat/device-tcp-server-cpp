<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="790" height="550" fontSize="15"   creationComplete="init()" backgroundColor="#FFFFFF" borderColor="#00646E" color="#FFFFFF" fontFamily="Arial" borderThicknessBottom="25" backgroundAlpha="0.8" title="人员月报表" xmlns:ns1="*">
	
	<mx:RemoteObject id="statementOfMonthForPerson" destination="StatementOfMonthForPersonService"  
		result="doTerminalServicePointResult(event.result)" showBusyCursor="true"   
		fault="doFault(event)">
	</mx:RemoteObject>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.dataGridClasses.DataGridColumn;
			import cn.ucans.common.ArrayFactory;
			import mx.collections.ArrayCollection;
			import cn.ucans.flex.FlexRequest;
 			import cn.ucans.flex.FlexReponse;
 			import mx.events.CloseEvent;
 			import mx.controls.Alert;
 			
 			private var file: FileReference;
 			
 			
 			private var dialog_confirm:CCSSConfirm = null;
 			
 			[Bindable]
 			public var orgName:String="";
			[Bindable]
 			public var userName:String="";
 			
			[Bindable]
			public var tableGridList:ArrayCollection=new ArrayCollection();
			
			private var strFileName:String="";
			
			private function init():void{
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 9140;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id=this.parentApplication.LoginORG_ID;
				request.user_id=this.parentApplication.LoginUser_ID;
				var d:Date=new Date();
				this.startTimeId.text=this.df.format(new Date(d.getFullYear(),d.getMonth(),1));
				this.endTimeId.text=this.df.format(new Date(d.getFullYear(),d.getMonth()+1,1));
				
				request.form.startTime=this.startTimeId.text;
				request.form.endTime=this.endTimeId.text;
				
				this.statementOfMonthForPerson.doTransaction(request);
				this.enabled = false;
			}
			
			private function doQuery():void{
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 9141;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id=this.parentApplication.LoginORG_ID;
				request.user_id=this.parentApplication.LoginUser_ID;
			
				request.form.startTime=this.startTimeId.text;
				request.form.endTime=this.endTimeId.text;
			
				this.statementOfMonthForPerson.doTransaction(request);
				this.enabled = false;
			}
	
			
			private function doTerminalServicePointResult(data:Object):void{
				this.enabled = true;
				var reponse:FlexReponse = data as FlexReponse;
				switch(reponse.ope_id){
					case 9140:
						if(reponse.sign == 0){
							
							var query_init_list:ArrayCollection = reponse.result.list as ArrayCollection;
							tableGridList = query_init_list;
							orgName = reponse.result.orgName as String;
							userName = reponse.result.userName as String;
							return;
						}
						break;
					case 9141:
						if(reponse.sign == 0){
							tableGridList = reponse.result.list as ArrayCollection;
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
				
						
					case 9145:
						if(reponse.sign == 0)
						{
//							var downloadURL:URLRequest;
							strFileName = reponse.result.fileName as String;	
							dialog_confirm = new CCSSConfirm();	
							Alert.show("请问您真的想导出这些数据吗？","确认信息",3,this,fun_DeleteExcel);
//							file.download(downloadURL);
							return;
						}
						else
						{
							CCSSAlert.showErrorDialog(this,"生成Execl文件时出错，错误代码是：" + reponse.message);
							return;
						}
						break;
					case 9146:
						if(reponse.sign == 0)
						{
							return;
						}
						else
						{
							CCSSAlert.showErrorDialog(this,"删除Execl文件时出错，错误代码是：" + reponse.message);
							return;
						}
						break;
					default:
						break;				
				}
			}
			
			
			private function doFault(event:Event):void{
				CCSSAlert.showErrorDialog(this,event.toString());
				return;
			}
			
			
			
			private function doExcpot():void{
				
				if(this.tableGridList != null && this.tableGridList.length>0){
	    			var strFileData:String = "结账时间||减免金额（元）||实际缴纳费用（元）";				
					for(var n:int = 0;n < this.tableGridList.length;n ++){
						var item:Object = this.tableGridList.getItemAt(n);
						strFileData = strFileData + "&&" + 
						NVL(item.CREATE_TIME,"")+ "||" +  
						NVL(item.FREE_CASH,"") + "||" + 
						NVL(item.REAL_PAY_CASH,"");
					}
					
					var request:FlexRequest = new FlexRequest();
					request.menu_id = this.parentApplication.LoginMenu_ID;
	    			request.ope_id = 9145;
	    			request.org_id = this.parentApplication.LoginORG_ID;
	    			request.user_id = this.parentApplication.LoginUser_ID;
					this.statementOfMonthForPerson.CreateExcelFile(strFileData,"",request);
					this.enabled = false;
				}else{
				 	
					CCSSAlert.showMessageDialog(this,"请先查询出数据，再进行本操作！");
				 	return;
				}
    		}
    		
    		 private function NVL(strSour:String,strTag:String):String{
				if(strSour == null){
					return strTag;
				}else{
					return strSour;
				}
				return null;
			}
			
			private function fun_DeleteExcel(event:CloseEvent):void{	
				switch(event.detail){
					case Alert.YES:
						var downloadURL:URLRequest;
						
							downloadURL = new URLRequest(parentApplication.strPubURL + "//TempFile//"+
								strFileName);
								
							file = new FileReference();
							file.addEventListener(ProgressEvent.PROGRESS,onProgress);
							file.addEventListener(Event.COMPLETE, downComplete);
							file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
							file.addEventListener(Event.CANCEL,doCancel);
							file.download(downloadURL);
							
						break;
					case Alert.NO:
							var request:FlexRequest = new FlexRequest();
							request.menu_id = this.parentApplication.LoginMenu_ID;
			    			request.ope_id = 9146;
			    			request.org_id = this.parentApplication.LoginORG_ID;
			    			request.user_id = this.parentApplication.LoginUser_ID;
							statementOfMonthForPerson.DeleteExcelFile(strFileName,request);
							this.enabled = false;
						break;
				}
			}
			
			 private function onProgress(e: ProgressEvent): void
			{
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				
				if(oProcessBar == null)
				{
					oProcessBar = new ProcessBarCanvas();
					oProcessBar.x = 300;
					oProcessBar.y = 200;
					oProcessBar.name = "ProcessBarCanvas";
					this.addChild(oProcessBar);
					oProcessBar.onProgress(e);
				}
				else
				{
					oProcessBar.onProgress(e);
				}
				
			}

			private function downComplete(e:Event): void{
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				if(oProcessBar != null)
				{
					this.removeChild(oProcessBar);
				}
				CCSSAlert.showMessageDialog(this,"生成Excel文件成功");
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9146;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
    			
				this.statementOfMonthForPerson.DeleteExcelFile(strFileName,request);
				
				this.enabled = false;
			}
			
			private function doCancel(event:Event):void
			{
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9146;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				statementOfMonthForPerson.DeleteExcelFile(strFileName,request);
				this.enabled = false;
			}
			
			private function ioErrorHandler(e:Event): void{
				CCSSAlert.showErrorDialog(this,"ioErrorHandler: " + e);
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				if(oProcessBar != null)
				{
					this.removeChild(oProcessBar);
				}
				
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9146;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				statementOfMonthForPerson.DeleteExcelFile(strFileName,request);
				CCSSAlert.showErrorDialog(this,"文件下载错误，请联系管理员！");
				this.enabled = false;
			}
			
			
			private function fun_setInitValue():void
			{	
					var startDate:String = this.startTimeId.text;
					
					var strYear:String = startDate.substring(0,4);
					var strMonth:String = startDate.substring(5,7);
					var strDate:String = startDate.substring(8,10);
					
					this.endTimeId.text=df.format(new Date(Number(strYear),Number(strMonth),Number(strDate)));
			}
			
			private function doPrint():void{
	 				
				if(this.tableGridList != null && this.tableGridList.length>0){
				 	
					PrintDataGridView.doPrint(userName,this.tableGridList,startTimeId.text+"至"+endTimeId.text+" "+orgName+" "+userName+"月报表",this.TableGrid.columns);	 			
				}else{
				 	
					CCSSAlert.showMessageDialog(this,"请先查询出数据，再进行本操作！");
				 	return;
				}
			} 
			
			
			
		]]>
	</mx:Script>
	<mx:DateFormatter id="df" formatString="YYYY-MM-DD"/> 
	<mx:Panel x="0" y="0" width="614" height="137" layout="absolute" fontSize="13" borderColor="#028874" title="查询向导" cornerRadius="5">
		<mx:Label x="24" y="35" text="开始日期" color="#000000" fontSize="12"/>
		<mx:Button x="522" y="33" label="查询" fontFamily="Arial" fontSize="12" color="#040404" click="doQuery()"/>
		<mx:Label x="270" y="34" text="结束日期" color="#030303"/>
		
		<mx:DateField x="335" y="33" width="163" id="endTimeId" enabled="false" monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"
										  dayNames="['日', '一', '二', '三', '四', '五', '六']"   formatString="YYYY-MM-DD" color="#0D0C0C" fontSize="12" fontWeight="normal"/> 
		
		<mx:DateField x="85" y="33" change="fun_setInitValue()" width="168" id="startTimeId" monthNames="['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月']"
										  dayNames="['日', '一', '二', '三', '四', '五', '六']"  formatString="YYYY-MM-DD" color="#0D0C0C" fontSize="12" fontWeight="normal"/> 

	
	
	</mx:Panel>
	
	<mx:Panel x="622" y="0" width="148" height="137" layout="absolute" borderColor="#170394" title="控制区域" fontSize="13">
		<mx:Button x="38" y="15" fontFamily="Arial" fontSize="12" color="#040404" label="打印" click="doPrint()"/>
		<mx:Button x="39" y="54" label="导出" fontFamily="Arial" fontSize="12" color="#040404" click="doExcpot()"/>
	</mx:Panel>
	
	
	<mx:Panel x="0" y="145" width="770" height="344" layout="absolute" borderColor="#0803C4" fontSize="13" title="数据">
		<mx:DataGrid x="0" y="0" width="750" height="300" id="TableGrid" borderColor="#050505"  dataProvider="{tableGridList}" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" textAlign="center"  fontSize="12" color="#030303" alternatingItemColors="[#FFFFFF, #FFFFFF]">
			<mx:columns>
				<mx:DataGridColumn headerText="结账时间" dataField="CREATE_TIME" width="230"/>
				<mx:DataGridColumn headerText="减免金额（元）" dataField="FREE_CASH" width="230"/>
				<mx:DataGridColumn headerText="实际缴纳费用（元）" dataField="REAL_PAY_CASH" width="230"/>
			</mx:columns>
		</mx:DataGrid>
		
	</mx:Panel>
	
	
	
	
</mx:Panel>
