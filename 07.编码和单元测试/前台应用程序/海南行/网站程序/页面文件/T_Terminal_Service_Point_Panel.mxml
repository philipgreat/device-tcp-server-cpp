<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="790" height="550" fontSize="15"   creationComplete="init()" backgroundColor="#FFFFFF" borderColor="#00646E" color="#FFFFFF" fontFamily="Arial" borderThicknessBottom="25" backgroundAlpha="0.8" title="终端维修点" xmlns:ns1="*">
	
	<mx:RemoteObject id="terminal_service_point" destination="TerminalServicePoint"  
		result="doTerminalServicePointResult(event.result)" showBusyCursor="true"   
		fault="doFault(event)">
	</mx:RemoteObject>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.dataGridClasses.DataGridColumn;
			import cn.ucans.common.RegularExpression;
			import cn.ucans.common.ArrayFactory;
			import mx.collections.ArrayCollection;
			import cn.ucans.flex.FlexRequest;
 			import cn.ucans.flex.FlexReponse;
 			import cn.ucans.bean.T_TERMINAL_SERVICE_POINT;
 			import mx.events.CloseEvent;
 			import mx.controls.Alert;
 			
 			private var file: FileReference;
 			
 			private var regular:RegularExpression = new RegularExpression();
 			
 			private var dialog_add:AddTerminalServicePointDialog = null;
 			private var dialog_update:UpdateTerminalServicePointDialog=null;
 			private var dialog_confirm:CCSSConfirm = null;
 			
 			private var terminal_Service_Point_Util:T_TERMINAL_SERVICE_POINT=null;//提供给修改操作时作中间变量传递数据
 			
 			[Bindable]
 			public var orgNameList:ArrayCollection=new ArrayCollection();
			
			[Bindable]
			public var tableGridList:ArrayCollection=new ArrayCollection();
			
			private var strFileName:String="";
			
			private function init():void{
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 9010;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id=this.parentApplication.LoginORG_ID;
				request.user_id=this.parentApplication.LoginUser_ID;
				
				this.terminal_Service_Point_Util=new T_TERMINAL_SERVICE_POINT();
				
				this.terminal_service_point.doTransaction(request);
				this.enabled = false;
			}
			
			private function doAddTerminalServicePoint():void{
				this.dialog_add = new AddTerminalServicePointDialog();
				this.dialog_add.showDialog(this,orgNameList);
				this.dialog_add.addEventListener(Event.REMOVED,doAddTerminalServicePointHandler);
				
			}
			
			
			private function doAddTerminalServicePointHandler(event:Event):void{
				if(this.dialog_add.DOOK){
					var request:FlexRequest = new FlexRequest();
					request.ope_id = 9011;
					request.menu_id = this.parentApplication.LoginMenu_ID;
					request.org_id=this.parentApplication.LoginORG_ID;
					request.user_id=this.parentApplication.LoginUser_ID;
					request.form.terminalServicePoint=this.dialog_add.terminalServiePoint;
					this.terminal_service_point.doTransaction(request);
					this.enabled = false;
				}
				
			}
			
			private function doSelectItem():void{
				if(TableGrid.selectedIndex>-1){
					var item:Object = this.TableGrid.selectedItem;
					this.terminal_Service_Point_Util.ID=item.ID;
					this.terminal_Service_Point_Util.ORG_ID=item.ORG_ID;
					this.terminal_Service_Point_Util.PROV_NAME=item.PROV_NAME;
					this.terminal_Service_Point_Util.AREA_NAME=item.AREA_NAME;
					this.terminal_Service_Point_Util.TELE_NO=item.TELE_NO;
					this.terminal_Service_Point_Util.ZIP_CODE=item.ZIP_CODE;
					this.terminal_Service_Point_Util.ADDRESS=item.ADDRESS;
				}else{
					this.clear();
				}
			}
			
			
			private function doUpdateTerminalServicePoint():void{
				if(this.TableGrid.selectedIndex <= -1){
					CCSSAlert.showMessageDialog(this,"请在数据表中选择要修改的终端类型，再进行此操作！");
				}else{
					this.dialog_update = new UpdateTerminalServicePointDialog();
					this.dialog_update.showDialog(this,orgNameList,terminal_Service_Point_Util);
					this.dialog_update.addEventListener(Event.REMOVED,doUpdateTerminalServicePointHandler);
				}
				
			}
			
			
			private function doUpdateTerminalServicePointHandler(event:Event):void{
				
					if(this.dialog_update.DOOK){
						var request:FlexRequest = new FlexRequest();
						request.ope_id = 9013;
						request.menu_id = this.parentApplication.LoginMenu_ID;
						request.org_id=this.parentApplication.LoginORG_ID;
						request.user_id=this.parentApplication.LoginUser_ID;
						
						var terminalServicePointForUpdate:T_TERMINAL_SERVICE_POINT = this.dialog_update.terminalServiePoint;
						
						request.form.oldTerminalServicePointForUpdate=terminal_Service_Point_Util;
						request.form.terminalServicePointForUpdate=terminalServicePointForUpdate;
					
						this.terminal_service_point.doTransaction(request);
						this.enabled = false;
					}
				
			}
			
			private function doDeleteTerminalServicePoint():void{
				if(this.TableGrid.selectedIndex<=-1){
					CCSSAlert.showMessageDialog(this,"请选择要删除的终端生产厂商维修点！");
				}else{
					
					var item:Object = this.TableGrid.selectedItem;
					var request:FlexRequest = new FlexRequest();
					request.ope_id = 9014;
					request.menu_id = this.parentApplication.LoginMenu_ID;
					request.org_id=this.parentApplication.LoginORG_ID;
					request.user_id=this.parentApplication.LoginUser_ID;
					
					var terminalServicePointForDel:T_TERMINAL_SERVICE_POINT = this.terminal_Service_Point_Util;
					request.form.terminalServicePointForDel = terminalServicePointForDel;
					this.dialog_confirm = new CCSSConfirm();
					this.dialog_confirm.showDialog(this,"您确认要删除此维修点吗？",request);
					this.dialog_confirm.addEventListener(Event.REMOVED,doDeleteTerminalServicePointHandler);
				}
			}
			
			private function doDeleteTerminalServicePointHandler(event:Event):void{
				if(this.dialog_confirm.YES){
					var request:FlexRequest = this.dialog_confirm.object as FlexRequest;
					this.terminal_service_point.doTransaction(request);
					this.enabled = false;
				}
			}
			
			private function doQueryTerminalServicePoint():void{
				var request:FlexRequest = new FlexRequest();
				request.ope_id = 9012;
				request.menu_id = this.parentApplication.LoginMenu_ID;
				request.org_id=this.parentApplication.LoginORG_ID;
				request.user_id=this.parentApplication.LoginUser_ID;
				
				var terminalServiePoint:T_TERMINAL_SERVICE_POINT = new T_TERMINAL_SERVICE_POINT();
				terminalServiePoint.ORG_ID=org_id.selectedItem.data;
				terminalServiePoint.PROV_NAME=regular.trim(prov_Name_Id.text);
				terminalServiePoint.AREA_NAME=regular.trim(areaName_Id.text);
				
				request.form.terminalServiePoint=terminalServiePoint;
				
				this.terminal_service_point.doTransaction(request);
				this.enabled = false;
			}
			
			
			private function clear():void{
					this.TableGrid.selectedIndex=-1;
			}
			
			private function doTerminalServicePointResult(data:Object):void{
				this.enabled = true;
				var reponse:FlexReponse = data as FlexReponse;
				switch(reponse.ope_id){
					case 9010:
						if(reponse.sign == 0){
							
							var query_init_list:ArrayCollection = reponse.result.list as ArrayCollection;
							tableGridList = query_init_list;
							
							this.orgNameList = reponse.result.orgNameList as ArrayCollection;
							
							this.org_id.dataProvider=reponse.result.queryOrgNameList as ArrayCollection;
							return;
						}
						break;
					case 9011:
						if(reponse.sign == 0){
							this.clear();
							this.doQueryTerminalServicePoint();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 9012:
						if(reponse.sign == 0){
							var queryTerminalServiePonit_init:ArrayCollection = reponse.result.list as ArrayCollection;
							this.TableGrid.dataProvider = queryTerminalServiePonit_init;
						}else{
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 9013:
						if(reponse.sign == 0){
							this.clear();
							this.doQueryTerminalServicePoint();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}else{
							this.doQueryTerminalServicePoint();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
					case 9014:
						if(reponse.sign == 0){
							this.clear();
							this.doQueryTerminalServicePoint();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}else{
							this.doQueryTerminalServicePoint();
							CCSSAlert.showMessageDialog(this,reponse.message);
							return;
						}
						break;
						
					case 9015:
						if(reponse.sign == 0)
						{
							strFileName = reponse.result.fileName as String;	
							dialog_confirm = new CCSSConfirm();	
							Alert.show("请问您真的想导出这些数据吗？","确认信息",3,this,fun_DeleteExcel);
							return;
						}
						else
						{
							CCSSAlert.showErrorDialog(this,"生成Execl文件时出错，错误代码是：" + reponse.message);
							return;
						}
						break;
					case 9016:
						if(reponse.sign == 0)
						{
							return;
						}
						else
						{
							CCSSAlert.showErrorDialog(this,"删除Execl文件时出错，错误代码是：" + reponse.message);
							return;
						}
						break;
					default:
						break;				
				}
			}
			
			
			private function doFault(event:Event):void{
				CCSSAlert.showErrorDialog(this,event.toString());
				return;
			}
			
			
			
			private function doExcpot():void{
	    		if(this.tableGridList != null && this.tableGridList.length > 0){
	    			var strFileData:String = "终端生产厂家名称||维修点所在省||维修点所在地市||维修点联系电话||邮政编码||维修点地址";				
					for(var n:int = 0;n < this.tableGridList.length;n ++){
						var item:Object = this.tableGridList.getItemAt(n);
						
						var strOrgName:String = "";
						strOrgName=ArrayFactory.getValueFroamArrayCollection(this.orgNameList,item.ORG_ID);
						
						strFileData = strFileData + "&&" + 
						NVL(strOrgName,"") + "||" + 
						NVL(item.PROV_NAME,"") + "||" +  
						NVL(item.AREA_NAME,"") + "||" + 
						NVL(item.TELE_NO,"") + "||" + 
						NVL(item.ZIP_CODE,"") + "||" + 
						NVL(item.ADDRESS,"");
					}
					
					var request:FlexRequest = new FlexRequest();
					request.menu_id = this.parentApplication.LoginMenu_ID;
	    			request.ope_id = 9015;
	    			request.org_id = this.parentApplication.LoginORG_ID;
	    			request.user_id = this.parentApplication.LoginUser_ID;
					this.terminal_service_point.CreateExcelFile(strFileData,"",request);
					this.enabled = false;
				}else{
				 	
					CCSSAlert.showMessageDialog(this,"请先查询出数据，再进行本操作！");
				 	return;
				 }
    		}
    		
    		 private function NVL(strSour:String,strTag:String):String{
				if(strSour == null){
					return strTag;
				}else{
					return strSour;
				}
				return null;
			}
			
			private function fun_DeleteExcel(event:CloseEvent):void{	
				switch(event.detail){
					case Alert.YES:
						var downloadURL:URLRequest;
						
							downloadURL = new URLRequest(parentApplication.strPubURL + "//TempFile//"+
								strFileName);
							file = new FileReference();
							file.addEventListener(ProgressEvent.PROGRESS,onProgress);
							file.addEventListener(Event.COMPLETE, downComplete);
							file.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
							file.addEventListener(Event.CANCEL,doCancel);
							file.download(downloadURL);
							
						break;
					case Alert.NO:
							var request:FlexRequest = new FlexRequest();
							request.menu_id = this.parentApplication.LoginMenu_ID;
			    			request.ope_id = 9016;
			    			request.org_id = this.parentApplication.LoginORG_ID;
			    			request.user_id = this.parentApplication.LoginUser_ID;
							terminal_service_point.DeleteExcelFile(strFileName,request);
							this.enabled = false;
						break;
				}
			}
			
			 private function onProgress(e: ProgressEvent): void
			{
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				
				if(oProcessBar == null)
				{
					oProcessBar = new ProcessBarCanvas();
					oProcessBar.x = 300;
					oProcessBar.y = 200;
					oProcessBar.name = "ProcessBarCanvas";
					this.addChild(oProcessBar);
					oProcessBar.onProgress(e);
				}
				else
				{
					oProcessBar.onProgress(e);
				}
				
			}

			private function downComplete(e:Event): void{
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				if(oProcessBar != null)
				{
					this.removeChild(oProcessBar);
				}
				CCSSAlert.showMessageDialog(this,"生成Excel文件成功");
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9016;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
    			
				this.terminal_service_point.DeleteExcelFile(strFileName,request);
				
				this.enabled = false;
			}
			
			private function doCancel(event:Event):void
			{
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9016;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				terminal_service_point.DeleteExcelFile(strFileName,request);
				this.enabled = false;
			}
			
			private function ioErrorHandler(e:Event): void{
				CCSSAlert.showErrorDialog(this,"ioErrorHandler: " + e);
				var oProcessBar:ProcessBarCanvas = this.getChildByName("ProcessBarCanvas") as ProcessBarCanvas;
				if(oProcessBar != null)
				{
					this.removeChild(oProcessBar);
				}
				
				file.removeEventListener(ProgressEvent.PROGRESS, onProgress);
				file.removeEventListener(Event.COMPLETE, downComplete);
				file.removeEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);
				file.removeEventListener(Event.CANCEL,doCancel);
				
				var request:FlexRequest = new FlexRequest();
				request.menu_id = this.parentApplication.LoginMenu_ID;
    			request.ope_id = 9016;
    			request.org_id = this.parentApplication.LoginORG_ID;
    			request.user_id = this.parentApplication.LoginUser_ID;
				terminal_service_point.DeleteExcelFile(strFileName,request);
				CCSSAlert.showErrorDialog(this,"文件下载错误，请联系管理员！");
				this.enabled = false;
			}
			
			private function formatOrgName(item:Object,column:DataGridColumn):String{
				var strOrgName:String= ArrayFactory.getValueFroamArrayCollection(this.orgNameList,item[column.dataField].toString());
				
				return strOrgName;
			}
		]]>
	</mx:Script>
	
	<mx:Panel x="0" y="0" width="455" height="118" layout="absolute" fontSize="13" borderColor="#028874" title="查询向导" cornerRadius="5">
		<mx:Label x="21" y="14" text="终端厂家" color="#000000" fontSize="12"/>
		<mx:ComboBox x="79" y="9" width="131" id="org_id" fontSize="12" color="#030303" dropdownWidth="300"></mx:ComboBox>
		<mx:Button x="362" y="10" label="查询" fontFamily="Arial" fontSize="12" color="#040404" click="doQueryTerminalServicePoint()"/>
		<mx:Label x="28" y="45" text="所在省" color="#030303"/>
		<mx:Label x="233" y="45" text="所在地区" color="#030303"/>
		<mx:TextInput x="293" y="42" fontFamily="Arial" fontSize="12" color="#050505" width="122" id="areaName_Id"/>
		<mx:TextInput x="78" y="44" width="132" id="prov_Name_Id" fontFamily="Arial" fontSize="12" color="#050505"/>
	</mx:Panel>
	
	<mx:Panel x="463" y="0" width="307" height="118" layout="absolute" borderColor="#170394" title="控制区域" fontSize="13">
		<mx:Button x="86.5" y="26" label="修改" fontFamily="Arial" fontSize="12" color="#040404" click="doUpdateTerminalServicePoint()"/>
		<mx:Button x="19.5" y="26" label="添加" fontFamily="Arial" fontSize="12" color="#040404" click="doAddTerminalServicePoint()"/>
		<mx:Button x="152.5" y="26" label="删除" fontFamily="Arial" fontSize="12" color="#040404" click="doDeleteTerminalServicePoint()"/>
		<mx:Button x="217" y="26" label="导出" fontFamily="Arial" fontSize="12" color="#040404" click="doExcpot()"/>
	</mx:Panel>
	
	
	<mx:Panel x="0" y="126" width="770" height="363" layout="absolute" borderColor="#0803C4" fontSize="13" title="数据">
		<mx:DataGrid x="0" y="0" width="750" height="319" id="TableGrid" borderColor="#050505"  dataProvider="{tableGridList}" horizontalScrollPolicy="auto" verticalScrollPolicy="auto" textAlign="center" click="doSelectItem()" fontSize="12" color="#030303" alternatingItemColors="[#FFFFFF, #FFFFFF]">
			<mx:columns>
				<mx:DataGridColumn headerText="ID" dataField="ID" visible="false"/>
				<mx:DataGridColumn headerText="终端厂家" dataField="ORG_ID"  width="120" labelFunction="formatOrgName"/>
				<mx:DataGridColumn headerText="所在省" dataField="PROV_NAME" width="70"/>
				<mx:DataGridColumn headerText="所在地区" dataField="AREA_NAME" width="70"/>
				<mx:DataGridColumn headerText="联系电话" dataField="TELE_NO" width="190"  textAlign="left"/>
				<mx:DataGridColumn headerText="邮编" dataField="ZIP_CODE" width="60"/>
				<mx:DataGridColumn headerText="地址" dataField="ADDRESS" width="140"  textAlign="left"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:Panel>
	
	
	
	
</mx:Panel>
